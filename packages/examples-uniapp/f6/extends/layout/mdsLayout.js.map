{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/../../src/util/index.ts","webpack://[name]/../../src/util/string.ts","webpack://[name]/../../src/util/array.ts","webpack://[name]/../../src/util/number.ts","webpack://[name]/../../src/util/math.ts","webpack://[name]/../../src/util/object.ts","webpack://[name]/../../src/util/function.ts","webpack://[name]/../../src/layout/mds.ts","webpack://[name]/./src/extends/layout/mdsLayout/index.ts","webpack://[name]/../../src/layout/base.ts","webpack://[name]/../src/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-max/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-min/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-rescale/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/inspect.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/stat.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/matrix.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/mathOperations.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/base.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/column.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/columnSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipColumn.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipRow.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/row.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/rowSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/selection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/sub.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/transpose.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/wrap.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/lu.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/qr.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/svd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/decompositions.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/determinant.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/linearDependencies.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/pseudoInverse.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/covariance.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/correlation.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/evd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/cholesky.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/nipals.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__exportStar","val","fn","cache","camelizeRE","str","replace","_","toUpperCase","Array","isArray","num","isNaN","Number","parseFloat","nodeIdxMap","edges","degrees","forEach","e","source","target","adjMatrix","dist","size","length","j","Infinity","k","data","directed","matrix","nodeMap","nodes","Error","node","id","push","sIndex","tIndex","ratio","result","row","newRow","v","traverseUp","children","Date","getTime","cp_1","map","cp_2","__assign","keys","options","_super","_this","updateCfg","__extends","MDSLayout","center","linkDistance","_a","x","y","onLayoutEnd","util_1","distances","handleInfinity","scaledD","scaledDistances","positions","runMDS","M","ml_matrix_1","mul","pow","rowMeans","mean","colMeans","totalMean","add","subRowVector","subColumnVector","ret","eigenValues","sqrt","diagonalMatrix","diagonal","leftSingularVectors","toJSON","splice","maxDistance","base_1","Base","init","execute","combos","reloadData","cfg","assign","destroyed","toString","isAnyArray","endsWith","max","input","arguments","undefined","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","maxValue","min","minValue","rescale","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","constructor","inspectData","rows","columns","maxI","Math","maxJ","line","formatNumber","join","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","slice","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","varianceByRow","unbiased","cols","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","clone","h","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","NaN","idx","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","newRows","newColumns","newData","fill","random","interval","round","matrix1","matrix2","klass","for","rand","randomInt","randInt","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","from","addS","addM","subS","subM","subtract","subtractS","subtractM","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","col","isSingular","count","X","subMatrixRow","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","ucols","tol","ii","inverse","useSVD","leftHandSide","rightHandSide","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","standardDeviation","sdy","corr","EigenvalueDecomposition","assumeSymmetric","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","hh","dl1","c3","el1","s2","tst1","high","low","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","u","scaleScores","maxIterations","terminationCriteria","getColumnVector","tOld","diff","counter","xResidual","residual","yResidual","betas"],"mappings":"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","file":"extends/layout/mdsLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MdsLayout\"] = factory();\n\telse\n\t\troot[\"MdsLayout\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 389);\n",null,null,null,null,null,null,null,null,"import { MDSLayout } from '@antv/layout/lib/layout/mds';\n\nexport default MDSLayout;\n",null,null,"import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import { isAnyArray } from 'is-any-array';\nimport rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkNonEmpty,\n  checkRowIndices,\n  checkColumnIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkRowIndices, checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, rowIndices.length, columnIndices.length);\n    this.rowIndices = rowIndices;\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (isAnyArray(array)) {\n    if (array[0] && isAnyArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (isAnyArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n"],"sourceRoot":""}