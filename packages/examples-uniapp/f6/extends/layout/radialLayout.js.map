{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/../../src/util/index.ts","webpack://[name]/../../src/util/string.ts","webpack://[name]/../../src/util/array.ts","webpack://[name]/../../src/util/number.ts","webpack://[name]/../../src/util/math.ts","webpack://[name]/../../src/util/object.ts","webpack://[name]/../../src/util/function.ts","webpack://[name]/../../../src/layout/radial/index.ts","webpack://[name]/./src/extends/layout/radialLayout/index.ts","webpack://[name]/../../../src/layout/radial/radial.ts","webpack://[name]/../../../src/layout/radial/mds.ts","webpack://[name]/../../../src/layout/radial/radialNonoverlapForce.ts","webpack://[name]/../../src/layout/base.ts","webpack://[name]/../src/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-max/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-min/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-rescale/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/inspect.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/stat.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/matrix.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/mathOperations.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/base.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/column.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/columnSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipColumn.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipRow.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/row.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/rowSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/selection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/sub.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/transpose.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/wrap.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/lu.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/qr.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/svd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/decompositions.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/determinant.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/linearDependencies.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/pseudoInverse.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/covariance.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/correlation.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/evd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/cholesky.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/nipals.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__exportStar","val","fn","cache","camelizeRE","str","replace","_","toUpperCase","Array","isArray","num","isNaN","Number","parseFloat","nodeIdxMap","edges","degrees","forEach","e","source","target","adjMatrix","dist","size","length","j","Infinity","k","data","directed","matrix","nodeMap","nodes","Error","node","id","push","sIndex","tIndex","ratio","result","row","newRow","v","traverseUp","children","Date","getTime","cp_1","map","cp_2","__assign","keys","getEDistance","p1","p2","Math","sqrt","options","_super","_this","updateCfg","__extends","RadialLayout","maxIteration","focusNode","unitRadius","linkDistance","preventOverlap","nodeSize","undefined","nodeSpacing","strictRadial","maxPreventOverlapIteration","sortBy","sortStrength","self","width","window","innerWidth","height","innerHeight","center","x","y","onLayoutEnd","util_1","found","array","index","focusIndex","a","D","maxDistance","maxToFocus","handleInfinity","distances","focusNodeD","semiWidth","semiHeight","maxRadius","maxD","max","apply","radii","eIdealD","eIdealDisMatrix","eIdealDistances","W","M","rows","cols","getWeightMatrix","weights","positions","mds_1","layout","random","run","nodeSizeFunc","nodeSpacingFunc_1","nodeSpacing_1","nonoverlapForceParams","focusID","iterations","nonoverlapForce","radialNonoverlapForce_1","eIdealDis","param","oneIteration","vparam","originDis","reciODis","xMolecule","yMolecule","denominator","u","edis","reciEdis","idealDis","reciR","linkDis","abs","iValue","jValue","charCodeAt","link","step","minus","base_1","params","dimension","MDS","ml_matrix_1","mul","pow","rowMeans","mean","colMeans","totalMean","add","subRowVector","subColumnVector","ret","eigenValues_1","diagonalMatrix","diagonal","leftSingularVectors","toJSON","splice","res","speed","gravity","RadialNonoverlapForce","disp","maxDisplace","getRepulsion","updatePositions","vecx","vecy","vecLength","sign","common","f","di","vx","vy","vLength","vpx","vpy","diLength","alpha","acos","PI","tdispLength","cos","distLength","limitedDist","min","nfDis","Base","init","execute","combos","reloadData","cfg","assign","destroyed","toString","isAnyArray","endsWith","input","arguments","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","maxValue","minValue","rescale","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","constructor","inspectData","columns","maxI","maxJ","line","formatNumber","join","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","slice","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","checkNonEmpty","isEmpty","varianceByRow","unbiased","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","clone","h","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","NaN","idx","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","b","mmul","halfRows","parseInt","halfCols","subMatrix","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","newRows","newColumns","newData","fill","interval","round","matrix1","matrix2","klass","for","rand","randomInt","randInt","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","from","addS","addM","subS","subM","subtract","subtractS","subtractM","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","sin","sinh","tan","tanh","trunc","arg0","powS","powM","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","col","isSingular","count","X","subMatrixRow","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","ucols","tol","ii","inverse","useSVD","leftHandSide","rightHandSide","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","standardDeviation","sdy","corr","EigenvalueDecomposition","assumeSymmetric","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","hh","dl1","c3","el1","s2","tst1","high","low","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","xr","xi","yr","yi","CholeskyDecomposition","positiveDefinite","L","isPositiveDefinite","B","nipals","scaleScores","maxIterations","terminationCriteria","getColumnVector","tOld","diff","counter","xResidual","residual","yResidual","betas"],"mappings":"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","file":"extends/layout/radialLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RadialLayout\"] = factory();\n\telse\n\t\troot[\"RadialLayout\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 390);\n",null,null,null,null,null,null,null,null,"import { RadialLayout } from '@antv/layout/lib/layout/radial';\n\nexport default RadialLayout;\n",null,null,null,null,null,"import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import { isAnyArray } from 'is-any-array';\nimport rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkNonEmpty,\n  checkRowIndices,\n  checkColumnIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkRowIndices, checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, rowIndices.length, columnIndices.length);\n    this.rowIndices = rowIndices;\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (isAnyArray(array)) {\n    if (array[0] && isAnyArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (isAnyArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n"],"sourceRoot":""}