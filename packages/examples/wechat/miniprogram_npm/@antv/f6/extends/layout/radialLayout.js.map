{"version":3,"sources":["webpack://f6/webpack/universalModuleDefinition","webpack://f6/webpack/bootstrap","webpack://f6//Users/bing/git/antv/layout/lib/util/string.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_is-any-array@1.0.0@is-any-array/src/index.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-array-max@1.2.3@ml-array-max/lib-es6/index.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-array-min@1.2.2@ml-array-min/lib-es6/index.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-array-rescale@1.3.5@ml-array-rescale/lib-es6/index.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/inspect.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/util.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/stat.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/matrix.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/mathOperations.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/base.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/column.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/columnSelection.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/flipColumn.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/flipRow.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/row.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/rowSelection.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/selection.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/sub.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/views/transpose.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/wrap/wrap.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/lu.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/util.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/qr.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/svd.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/decompositions.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/determinant.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/linearDependencies.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/pseudoInverse.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/covariance.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/correlation.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/evd.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/cholesky.js","webpack://f6//Users/bing/git/antv/layout/node_modules/_ml-matrix@6.8.0@ml-matrix/src/dc/nipals.js","webpack://f6//Users/bing/git/antv/layout/lib/util/array.js","webpack://f6//Users/bing/git/antv/layout/lib/util/number.js","webpack://f6//Users/bing/git/antv/layout/lib/util/math.js","webpack://f6//Users/bing/git/antv/layout/lib/util/object.js","webpack://f6//Users/bing/git/antv/layout/lib/util/function.js","webpack://f6//Users/bing/git/antv/layout/lib/layout/radial/index.js","webpack://f6/./src/extends/layout/radialLayout/index.ts","webpack://f6//Users/bing/git/antv/layout/lib/layout/radial/radial.js","webpack://f6//Users/bing/git/antv/layout/lib/layout/radial/mds.js","webpack://f6//Users/bing/git/antv/layout/lib/layout/radial/radialNonoverlapForce.js","webpack://f6//Users/bing/git/antv/layout/lib/layout/base.js","webpack://f6//Users/bing/git/antv/layout/lib/util/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","camelize","isString","val","fn","cache","camelizeRE","str","replace","_","toUpperCase","toString","isAnyArray","endsWith","max","input","options","arguments","length","undefined","isArray","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","min","minValue","rescale","output","Array","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","constructor","inspectData","rows","columns","maxI","Math","maxJ","result","line","j","push","formatNumber","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","slice","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","from","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","k","clone","h","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","columnVector","getColumn","column1","column2","NaN","v","idx","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","y","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","center","newRows","newColumns","newData","fill","random","interval","round","data","matrix1","matrix2","klass","for","rand","randomInt","randInt","diagonal","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","splice","newRow","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","col","isSingular","count","X","subMatrixRow","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","ucols","tol","ii","inverse","useSVD","leftHandSide","rightHandSide","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","leftSingularVectors","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","standardDeviation","sdy","corr","EigenvalueDecomposition","assumeSymmetric","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","hh","dl1","c3","el1","s2","tst1","high","low","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","u","scaleScores","maxIterations","terminationCriteria","getColumnVector","tOld","diff","counter","xResidual","residual","yResidual","betas","toNumber","isNumber","parseFloat","traverseTreeUp","scaleMatrix","getAdjMatrix","floydWarshall","getDegree","nodeIdxMap","edges","degrees","forEach","source","target","adjMatrix","dist","Infinity","directed","nodes","nodeMap","node","id","sIndex","tIndex","ratio","traverseUp","children","__assign","assign","apply","isObject","Date","getTime","cp_1","map","cp_2","keys","isFunction","__createBinding","k2","__exportStar","extendStatics","__extends","setPrototypeOf","__proto__","__","__importDefault","RadialLayout","util_1","base_1","mds_1","radialNonoverlapForce_1","getEDistance","p1","p2","_super","_this","maxIteration","focusNode","unitRadius","linkDistance","preventOverlap","strictRadial","maxPreventOverlapIteration","sortStrength","updateCfg","getDefaultCfg","nodeSize","nodeSpacing","sortBy","execute","self","width","window","innerWidth","height","innerHeight","onLayoutEnd","found","focusIndex","D","maxDistance","maxToFocus","handleInfinity","distances","focusNodeD","semiWidth","semiHeight","maxRadius","maxD","radii","eIdealD","eIdealDisMatrix","eIdealDistances","W","M","getWeightMatrix","weights","positions","default","layout","run","nodeSizeFunc","nodeSpacingFunc_1","nodeSpacing_1","nonoverlapForceParams","focusID","iterations","nonoverlapForce","eIdealDis","param","oneIteration","vparam","originDis","reciODis","xMolecule","yMolecule","denominator","edis","reciEdis","idealDis","reciR","linkDis","iValue","jValue","charCodeAt","link","step","minus","getType","Base","ml_matrix_1","MDS","params","rowMeans","colMeans","totalMean","subRowVector","subColumnVector","ret","eigenValues_1","diagonalMatrix","toJSON","_a","res","RadialNonoverlapForce","disp","speed","gravity","maxDisplace","getRepulsion","updatePositions","vecx","vecy","vecLength","common","di","vx","vy","vLength","vpx","vpy","diLength","PI","tdispLength","distLength","limitedDist","nfDis","combos","destroyed","init","reloadData","executeWithWorker","cfg","destroy","onTick"],"mappings":"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","file":"extends/layout/radialLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"f6\"] = factory();\n\telse\n\t\troot[\"f6\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 444);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelize = exports.isString = void 0;\nvar isString = function (val) { return typeof val === 'string'; };\nexports.isString = isString;\nvar cacheStringFunction = function (fn) {\n    var cache = Object.create(null);\n    return (function (str) {\n        var hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nvar camelizeRE = /-(\\w)/g;\nexports.camelize = cacheStringFunction(function (str) {\n    return str.replace(camelizeRE, function (_, c) { return (c ? c.toUpperCase() : ''); });\n});\n// export const capitalize = cacheStringFunction(\n//   (str: string) => str.charAt(0).toUpperCase() + str.slice(1),\n// )\n//# sourceMappingURL=string.js.map","const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = void 0;\nexports.isArray = Array.isArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toNumber = exports.isNaN = exports.isNumber = void 0;\nvar isNumber = function (val) { return typeof val === 'number'; };\nexports.isNumber = isNumber;\nvar isNaN = function (num) { return Number.isNaN(Number(num)); };\nexports.isNaN = isNaN;\nvar toNumber = function (val) {\n    var n = parseFloat(val);\n    return exports.isNaN(n) ? val : n;\n};\nexports.toNumber = toNumber;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegree = void 0;\nvar getDegree = function (n, nodeIdxMap, edges) {\n    var degrees = [];\n    for (var i = 0; i < n; i++) {\n        degrees[i] = 0;\n    }\n    if (!edges)\n        return degrees;\n    edges.forEach(function (e) {\n        if (e.source) {\n            degrees[nodeIdxMap[e.source]] += 1;\n        }\n        if (e.target) {\n            degrees[nodeIdxMap[e.target]] += 1;\n        }\n    });\n    return degrees;\n};\nexports.getDegree = getDegree;\nvar floydWarshall = function (adjMatrix) {\n    // initialize\n    var dist = [];\n    var size = adjMatrix.length;\n    for (var i = 0; i < size; i += 1) {\n        dist[i] = [];\n        for (var j = 0; j < size; j += 1) {\n            if (i === j) {\n                dist[i][j] = 0;\n            }\n            else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n                dist[i][j] = Infinity;\n            }\n            else {\n                dist[i][j] = adjMatrix[i][j];\n            }\n        }\n    }\n    // floyd\n    for (var k = 0; k < size; k += 1) {\n        for (var i = 0; i < size; i += 1) {\n            for (var j = 0; j < size; j += 1) {\n                if (dist[i][j] > dist[i][k] + dist[k][j]) {\n                    dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }\n    }\n    return dist;\n};\nexports.floydWarshall = floydWarshall;\nvar getAdjMatrix = function (data, directed) {\n    var nodes = data.nodes, edges = data.edges;\n    var matrix = [];\n    // map node with index in data.nodes\n    var nodeMap = {};\n    if (!nodes) {\n        throw new Error('invalid nodes data!');\n    }\n    if (nodes) {\n        nodes.forEach(function (node, i) {\n            nodeMap[node.id] = i;\n            var row = [];\n            matrix.push(row);\n        });\n    }\n    if (edges) {\n        edges.forEach(function (e) {\n            var source = e.source, target = e.target;\n            var sIndex = nodeMap[source];\n            var tIndex = nodeMap[target];\n            matrix[sIndex][tIndex] = 1;\n            if (!directed) {\n                matrix[tIndex][sIndex] = 1;\n            }\n        });\n    }\n    return matrix;\n};\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\nvar scaleMatrix = function (matrix, ratio) {\n    var result = [];\n    matrix.forEach(function (row) {\n        var newRow = [];\n        row.forEach(function (v) {\n            newRow.push(v * ratio);\n        });\n        result.push(newRow);\n    });\n    return result;\n};\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\nvar traverseUp = function (data, fn) {\n    if (data && data.children) {\n        for (var i = data.children.length - 1; i >= 0; i--) {\n            if (!traverseUp(data.children[i], fn))\n                return;\n        }\n    }\n    if (!fn(data)) {\n        return false;\n    }\n    return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\nvar traverseTreeUp = function (data, fn) {\n    if (typeof fn !== 'function') {\n        return;\n    }\n    traverseUp(data, fn);\n};\nexports.traverseTreeUp = traverseTreeUp;\n//# sourceMappingURL=math.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.isObject = void 0;\nvar isObject = function (val) {\n    return val !== null && typeof val === 'object';\n};\nexports.isObject = isObject;\nvar clone = function (target) {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        var cp_1 = [];\n        target.forEach(function (v) {\n            cp_1.push(v);\n        });\n        return cp_1.map(function (n) { return exports.clone(n); });\n    }\n    if (typeof target === 'object' && target !== {}) {\n        var cp_2 = __assign({}, target);\n        Object.keys(cp_2).forEach(function (k) {\n            cp_2[k] = exports.clone(cp_2[k]);\n        });\n        return cp_2;\n    }\n    return target;\n};\nexports.clone = clone;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFunction = void 0;\nvar isFunction = function (val) {\n    return typeof val === 'function';\n};\nexports.isFunction = isFunction;\n//# sourceMappingURL=function.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./radial\"), exports);\n//# sourceMappingURL=index.js.map","import { RadialLayout } from '@antv/layout/lib/layout/radial';\n\nexport default RadialLayout;\n","\"use strict\";\n/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RadialLayout = void 0;\nvar util_1 = require(\"../../util\");\nvar base_1 = require(\"../base\");\nvar mds_1 = __importDefault(require(\"./mds\"));\nvar radialNonoverlapForce_1 = __importDefault(require(\"./radialNonoverlapForce\"));\nfunction getWeightMatrix(M) {\n    var rows = M.length;\n    var cols = M[0].length;\n    var result = [];\n    for (var i = 0; i < rows; i++) {\n        var row = [];\n        for (var j = 0; j < cols; j++) {\n            if (M[i][j] !== 0) {\n                row.push(1 / (M[i][j] * M[i][j]));\n            }\n            else {\n                row.push(0);\n            }\n        }\n        result.push(row);\n    }\n    return result;\n}\nfunction getIndexById(array, id) {\n    var index = -1;\n    array.forEach(function (a, i) {\n        if (a.id === id) {\n            index = i;\n        }\n    });\n    return index;\n}\nfunction getEDistance(p1, p2) {\n    return Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));\n}\n/**\n * 辐射状布局\n */\nvar RadialLayout = /** @class */ (function (_super) {\n    __extends(RadialLayout, _super);\n    function RadialLayout(options) {\n        var _this = _super.call(this) || this;\n        /** 停止迭代的最大迭代数 */\n        _this.maxIteration = 1000;\n        /** 中心点，默认为数据中第一个点 */\n        _this.focusNode = null;\n        /** 每一圈半径 */\n        _this.unitRadius = null;\n        /** 默认边长度 */\n        _this.linkDistance = 50;\n        /** 是否防止重叠 */\n        _this.preventOverlap = false;\n        /** 是否必须是严格的 radial 布局，即每一层的节点严格布局在一个环上。preventOverlap 为 true 时生效 */\n        _this.strictRadial = true;\n        /** 防止重叠步骤的最大迭代次数 */\n        _this.maxPreventOverlapIteration = 200;\n        _this.sortStrength = 10;\n        _this.nodes = [];\n        _this.edges = [];\n        _this.updateCfg(options);\n        return _this;\n    }\n    RadialLayout.prototype.getDefaultCfg = function () {\n        return {\n            maxIteration: 1000,\n            focusNode: null,\n            unitRadius: null,\n            linkDistance: 50,\n            preventOverlap: false,\n            nodeSize: undefined,\n            nodeSpacing: undefined,\n            strictRadial: true,\n            maxPreventOverlapIteration: 200,\n            sortBy: undefined,\n            sortStrength: 10\n        };\n    };\n    /**\n     * 执行布局\n     */\n    RadialLayout.prototype.execute = function () {\n        var self = this;\n        var nodes = self.nodes;\n        var edges = self.edges || [];\n        if (!nodes || nodes.length === 0) {\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        if (!self.width && typeof window !== \"undefined\") {\n            self.width = window.innerWidth;\n        }\n        if (!self.height && typeof window !== \"undefined\") {\n            self.height = window.innerHeight;\n        }\n        if (!self.center) {\n            self.center = [self.width / 2, self.height / 2];\n        }\n        var center = self.center;\n        if (nodes.length === 1) {\n            nodes[0].x = center[0];\n            nodes[0].y = center[1];\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        var linkDistance = self.linkDistance;\n        // layout\n        var focusNode = null;\n        if (util_1.isString(self.focusNode)) {\n            var found = false;\n            for (var i = 0; i < nodes.length; i++) {\n                if (nodes[i].id === self.focusNode) {\n                    focusNode = nodes[i];\n                    self.focusNode = focusNode;\n                    found = true;\n                    i = nodes.length;\n                }\n            }\n            if (!found) {\n                focusNode = null;\n            }\n        }\n        else {\n            focusNode = self.focusNode;\n        }\n        // default focus node\n        if (!focusNode) {\n            focusNode = nodes[0];\n            self.focusNode = focusNode;\n        }\n        // the index of the focusNode in data\n        var focusIndex = getIndexById(nodes, focusNode.id);\n        self.focusIndex = focusIndex;\n        // the graph-theoretic distance (shortest path distance) matrix\n        var adjMatrix = util_1.getAdjMatrix({ nodes: nodes, edges: edges }, false);\n        var D = util_1.floydWarshall(adjMatrix);\n        var maxDistance = self.maxToFocus(D, focusIndex);\n        // replace first node in unconnected component to the circle at (maxDistance + 1)\n        self.handleInfinity(D, focusIndex, maxDistance + 1);\n        self.distances = D;\n        // the shortest path distance from each node to focusNode\n        var focusNodeD = D[focusIndex];\n        var width = self.width || 500;\n        var height = self.height || 500;\n        var semiWidth = width - center[0] > center[0] ? center[0] : width - center[0];\n        var semiHeight = height - center[1] > center[1] ? center[1] : height - center[1];\n        if (semiWidth === 0) {\n            semiWidth = width / 2;\n        }\n        if (semiHeight === 0) {\n            semiHeight = height / 2;\n        }\n        // the maxRadius of the graph\n        var maxRadius = semiHeight > semiWidth ? semiWidth : semiHeight;\n        var maxD = Math.max.apply(Math, focusNodeD);\n        // the radius for each nodes away from focusNode\n        var radii = [];\n        focusNodeD.forEach(function (value, i) {\n            if (!self.unitRadius) {\n                self.unitRadius = maxRadius / maxD;\n            }\n            radii[i] = value * self.unitRadius;\n        });\n        self.radii = radii;\n        var eIdealD = self.eIdealDisMatrix();\n        // const eIdealD = scaleMatrix(D, linkDistance);\n        self.eIdealDistances = eIdealD;\n        // the weight matrix, Wij = 1 / dij^(-2)\n        var W = getWeightMatrix(eIdealD);\n        self.weights = W;\n        // the initial positions from mds\n        var mds = new mds_1.default({ linkDistance: linkDistance, distances: eIdealD });\n        var positions = mds.layout();\n        positions.forEach(function (p) {\n            if (util_1.isNaN(p[0])) {\n                p[0] = Math.random() * linkDistance;\n            }\n            if (util_1.isNaN(p[1])) {\n                p[1] = Math.random() * linkDistance;\n            }\n        });\n        self.positions = positions;\n        positions.forEach(function (p, i) {\n            nodes[i].x = p[0] + center[0];\n            nodes[i].y = p[1] + center[1];\n        });\n        // move the graph to origin, centered at focusNode\n        positions.forEach(function (p) {\n            p[0] -= positions[focusIndex][0];\n            p[1] -= positions[focusIndex][1];\n        });\n        self.run();\n        var preventOverlap = self.preventOverlap;\n        var nodeSize = self.nodeSize;\n        var nodeSizeFunc;\n        var strictRadial = self.strictRadial;\n        // stagger the overlapped nodes\n        if (preventOverlap) {\n            var nodeSpacing_1 = self.nodeSpacing;\n            var nodeSpacingFunc_1;\n            if (util_1.isNumber(nodeSpacing_1)) {\n                nodeSpacingFunc_1 = function () { return nodeSpacing_1; };\n            }\n            else if (util_1.isFunction(nodeSpacing_1)) {\n                nodeSpacingFunc_1 = nodeSpacing_1;\n            }\n            else {\n                nodeSpacingFunc_1 = function () { return 0; };\n            }\n            if (!nodeSize) {\n                nodeSizeFunc = function (d) {\n                    if (d.size) {\n                        if (util_1.isArray(d.size)) {\n                            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n                            return res + nodeSpacingFunc_1(d);\n                        }\n                        return d.size + nodeSpacingFunc_1(d);\n                    }\n                    return 10 + nodeSpacingFunc_1(d);\n                };\n            }\n            else if (util_1.isArray(nodeSize)) {\n                nodeSizeFunc = function (d) {\n                    var res = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n                    return res + nodeSpacingFunc_1(d);\n                };\n            }\n            else {\n                nodeSizeFunc = function (d) { return nodeSize + nodeSpacingFunc_1(d); };\n            }\n            var nonoverlapForceParams = {\n                nodes: nodes,\n                nodeSizeFunc: nodeSizeFunc,\n                adjMatrix: adjMatrix,\n                positions: positions,\n                radii: radii,\n                height: height,\n                width: width,\n                strictRadial: strictRadial,\n                focusID: focusIndex,\n                iterations: self.maxPreventOverlapIteration || 200,\n                k: positions.length / 4.5\n            };\n            var nonoverlapForce = new radialNonoverlapForce_1.default(nonoverlapForceParams);\n            positions = nonoverlapForce.layout();\n        }\n        // move the graph to center\n        positions.forEach(function (p, i) {\n            nodes[i].x = p[0] + center[0];\n            nodes[i].y = p[1] + center[1];\n        });\n        if (self.onLayoutEnd)\n            self.onLayoutEnd();\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n    RadialLayout.prototype.run = function () {\n        var self = this;\n        var maxIteration = self.maxIteration;\n        var positions = self.positions || [];\n        var W = self.weights || [];\n        var eIdealDis = self.eIdealDistances || [];\n        var radii = self.radii || [];\n        for (var i = 0; i <= maxIteration; i++) {\n            var param = i / maxIteration;\n            self.oneIteration(param, positions, radii, eIdealDis, W);\n        }\n    };\n    RadialLayout.prototype.oneIteration = function (param, positions, radii, D, W) {\n        var self = this;\n        var vparam = 1 - param;\n        var focusIndex = self.focusIndex;\n        positions.forEach(function (v, i) {\n            // v\n            var originDis = getEDistance(v, [0, 0]);\n            var reciODis = originDis === 0 ? 0 : 1 / originDis;\n            if (i === focusIndex) {\n                return;\n            }\n            var xMolecule = 0;\n            var yMolecule = 0;\n            var denominator = 0;\n            positions.forEach(function (u, j) {\n                // u\n                if (i === j) {\n                    return;\n                }\n                // the euclidean distance between v and u\n                var edis = getEDistance(v, u);\n                var reciEdis = edis === 0 ? 0 : 1 / edis;\n                var idealDis = D[j][i];\n                // same for x and y\n                denominator += W[i][j];\n                // x\n                xMolecule += W[i][j] * (u[0] + idealDis * (v[0] - u[0]) * reciEdis);\n                // y\n                yMolecule += W[i][j] * (u[1] + idealDis * (v[1] - u[1]) * reciEdis);\n            });\n            var reciR = radii[i] === 0 ? 0 : 1 / radii[i];\n            denominator *= vparam;\n            denominator += param * reciR * reciR;\n            // x\n            xMolecule *= vparam;\n            xMolecule += param * reciR * v[0] * reciODis;\n            v[0] = xMolecule / denominator;\n            // y\n            yMolecule *= vparam;\n            yMolecule += param * reciR * v[1] * reciODis;\n            v[1] = yMolecule / denominator;\n        });\n    };\n    RadialLayout.prototype.eIdealDisMatrix = function () {\n        var self = this;\n        var nodes = self.nodes;\n        if (!nodes)\n            return [];\n        var D = self.distances;\n        var linkDis = self.linkDistance;\n        var radii = self.radii || [];\n        var unitRadius = self.unitRadius || 50;\n        var result = [];\n        if (D) {\n            D.forEach(function (row, i) {\n                var newRow = [];\n                row.forEach(function (v, j) {\n                    if (i === j) {\n                        newRow.push(0);\n                    }\n                    else if (radii[i] === radii[j]) {\n                        // i and j are on the same circle\n                        if (self.sortBy === \"data\") {\n                            // sort the nodes on the same circle according to the ordering of the data\n                            newRow.push((v * (Math.abs(i - j) * self.sortStrength)) /\n                                (radii[i] / unitRadius));\n                        }\n                        else if (self.sortBy) {\n                            // sort the nodes on the same circle according to the attributes\n                            var iValue = nodes[i][self.sortBy] || 0;\n                            var jValue = nodes[j][self.sortBy] || 0;\n                            if (util_1.isString(iValue)) {\n                                iValue = iValue.charCodeAt(0);\n                            }\n                            if (util_1.isString(jValue)) {\n                                jValue = jValue.charCodeAt(0);\n                            }\n                            newRow.push((v * (Math.abs(iValue - jValue) * self.sortStrength)) /\n                                (radii[i] / unitRadius));\n                        }\n                        else {\n                            newRow.push((v * linkDis) / (radii[i] / unitRadius));\n                        }\n                    }\n                    else {\n                        // i and j are on different circle\n                        // i and j are on different circle\n                        var link = (linkDis + unitRadius) / 2;\n                        newRow.push(v * link);\n                    }\n                });\n                result.push(newRow);\n            });\n        }\n        return result;\n    };\n    RadialLayout.prototype.handleInfinity = function (matrix, focusIndex, step) {\n        var length = matrix.length;\n        // 遍历 matrix 中遍历 focus 对应行\n        for (var i = 0; i < length; i++) {\n            // matrix 关注点对应行的 Inf 项\n            if (matrix[focusIndex][i] === Infinity) {\n                matrix[focusIndex][i] = step;\n                matrix[i][focusIndex] = step;\n                // 遍历 matrix 中的 i 行，i 行中非 Inf 项若在 focus 行为 Inf，则替换 focus 行的那个 Inf\n                for (var j = 0; j < length; j++) {\n                    if (matrix[i][j] !== Infinity && matrix[focusIndex][j] === Infinity) {\n                        matrix[focusIndex][j] = step + matrix[i][j];\n                        matrix[j][focusIndex] = step + matrix[i][j];\n                    }\n                }\n            }\n        }\n        // 处理其他行的 Inf。根据该行对应点与 focus 距离以及 Inf 项点 与 focus 距离，决定替换值\n        for (var i = 0; i < length; i++) {\n            if (i === focusIndex) {\n                continue;\n            }\n            for (var j = 0; j < length; j++) {\n                if (matrix[i][j] === Infinity) {\n                    var minus = Math.abs(matrix[focusIndex][i] - matrix[focusIndex][j]);\n                    minus = minus === 0 ? 1 : minus;\n                    matrix[i][j] = minus;\n                }\n            }\n        }\n    };\n    RadialLayout.prototype.maxToFocus = function (matrix, focusIndex) {\n        var max = 0;\n        for (var i = 0; i < matrix[focusIndex].length; i++) {\n            if (matrix[focusIndex][i] === Infinity) {\n                continue;\n            }\n            max = matrix[focusIndex][i] > max ? matrix[focusIndex][i] : max;\n        }\n        return max;\n    };\n    RadialLayout.prototype.getType = function () {\n        return \"radial\";\n    };\n    return RadialLayout;\n}(base_1.Base));\nexports.RadialLayout = RadialLayout;\n//# sourceMappingURL=radial.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ml_matrix_1 = require(\"ml-matrix\");\nvar MDS = /** @class */ (function () {\n    function MDS(params) {\n        this.distances = params.distances;\n        this.dimension = params.dimension || 2;\n        this.linkDistance = params.linkDistance;\n    }\n    MDS.prototype.layout = function () {\n        var self = this;\n        var dimension = self.dimension, distances = self.distances, linkDistance = self.linkDistance;\n        try {\n            // square distances\n            var M = ml_matrix_1.Matrix.mul(ml_matrix_1.Matrix.pow(distances, 2), -0.5);\n            // double centre the rows/columns\n            var rowMeans = M.mean('row');\n            var colMeans = M.mean('column');\n            var totalMean = M.mean();\n            M.add(totalMean).subRowVector(rowMeans).subColumnVector(colMeans);\n            // take the SVD of the double centred matrix, and return the\n            // points from it\n            var ret = new ml_matrix_1.SingularValueDecomposition(M);\n            var eigenValues_1 = ml_matrix_1.Matrix.sqrt(ret.diagonalMatrix).diagonal();\n            return ret.leftSingularVectors.toJSON().map(function (row) {\n                return ml_matrix_1.Matrix.mul([row], [eigenValues_1]).toJSON()[0].splice(0, dimension);\n            });\n        }\n        catch (_a) {\n            var res = [];\n            for (var i = 0; i < distances.length; i++) {\n                var x = Math.random() * linkDistance;\n                var y = Math.random() * linkDistance;\n                res.push([x, y]);\n            }\n            return res;\n        }\n    };\n    return MDS;\n}());\nexports.default = MDS;\n//# sourceMappingURL=mds.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SPEED_DIVISOR = 800;\nvar RadialNonoverlapForce = /** @class */ (function () {\n    function RadialNonoverlapForce(params) {\n        this.disp = [];\n        this.positions = params.positions;\n        this.adjMatrix = params.adjMatrix;\n        this.focusID = params.focusID;\n        this.radii = params.radii;\n        this.iterations = params.iterations || 10;\n        this.height = params.height || 10;\n        this.width = params.width || 10;\n        this.speed = params.speed || 100;\n        this.gravity = params.gravity || 10;\n        this.nodeSizeFunc = params.nodeSizeFunc;\n        this.k = params.k || 5;\n        this.strictRadial = params.strictRadial;\n        this.nodes = params.nodes;\n    }\n    RadialNonoverlapForce.prototype.layout = function () {\n        var self = this;\n        var positions = self.positions;\n        var disp = [];\n        var iterations = self.iterations;\n        var maxDisplace = self.width / 10;\n        self.maxDisplace = maxDisplace;\n        self.disp = disp;\n        for (var i = 0; i < iterations; i++) {\n            positions.forEach(function (_, k) {\n                disp[k] = { x: 0, y: 0 };\n            });\n            // 给重叠的节点增加斥力\n            self.getRepulsion();\n            self.updatePositions();\n        }\n        return positions;\n    };\n    RadialNonoverlapForce.prototype.getRepulsion = function () {\n        var self = this;\n        var positions = self.positions;\n        var nodes = self.nodes;\n        var disp = self.disp;\n        var k = self.k;\n        var radii = self.radii || [];\n        positions.forEach(function (v, i) {\n            disp[i] = { x: 0, y: 0 };\n            positions.forEach(function (u, j) {\n                if (i === j) {\n                    return;\n                }\n                // v and u are not on the same circle, return\n                if (radii[i] !== radii[j]) {\n                    return;\n                }\n                var vecx = v[0] - u[0];\n                var vecy = v[1] - u[1];\n                var vecLength = Math.sqrt(vecx * vecx + vecy * vecy);\n                if (vecLength === 0) {\n                    vecLength = 1;\n                    var sign = i > j ? 1 : -1;\n                    vecx = 0.01 * sign;\n                    vecy = 0.01 * sign;\n                }\n                // these two nodes overlap\n                if (vecLength < self.nodeSizeFunc(nodes[i]) / 2 + self.nodeSizeFunc(nodes[j]) / 2) {\n                    var common = (k * k) / vecLength;\n                    disp[i].x += (vecx / vecLength) * common;\n                    disp[i].y += (vecy / vecLength) * common;\n                }\n            });\n        });\n    };\n    RadialNonoverlapForce.prototype.updatePositions = function () {\n        var self = this;\n        var positions = self.positions;\n        var disp = self.disp;\n        var speed = self.speed;\n        var strictRadial = self.strictRadial;\n        var f = self.focusID;\n        var maxDisplace = self.maxDisplace || self.width / 10;\n        if (strictRadial) {\n            disp.forEach(function (di, i) {\n                var vx = positions[i][0] - positions[f][0];\n                var vy = positions[i][1] - positions[f][1];\n                var vLength = Math.sqrt(vx * vx + vy * vy);\n                var vpx = vy / vLength;\n                var vpy = -vx / vLength;\n                var diLength = Math.sqrt(di.x * di.x + di.y * di.y);\n                var alpha = Math.acos((vpx * di.x + vpy * di.y) / diLength);\n                if (alpha > Math.PI / 2) {\n                    alpha -= Math.PI / 2;\n                    vpx *= -1;\n                    vpy *= -1;\n                }\n                var tdispLength = Math.cos(alpha) * diLength;\n                di.x = vpx * tdispLength;\n                di.y = vpy * tdispLength;\n            });\n        }\n        // move\n        var radii = self.radii;\n        positions.forEach(function (n, i) {\n            if (i === f) {\n                return;\n            }\n            var distLength = Math.sqrt(disp[i].x * disp[i].x + disp[i].y * disp[i].y);\n            if (distLength > 0 && i !== f) {\n                var limitedDist = Math.min(maxDisplace * (speed / SPEED_DIVISOR), distLength);\n                n[0] += (disp[i].x / distLength) * limitedDist;\n                n[1] += (disp[i].y / distLength) * limitedDist;\n                if (strictRadial) {\n                    var vx = n[0] - positions[f][0];\n                    var vy = n[1] - positions[f][1];\n                    var nfDis = Math.sqrt(vx * vx + vy * vy);\n                    vx = (vx / nfDis) * radii[i];\n                    vy = (vy / nfDis) * radii[i];\n                    n[0] = positions[f][0] + vx;\n                    n[1] = positions[f][1] + vy;\n                }\n            }\n        });\n    };\n    return RadialNonoverlapForce;\n}());\nexports.default = RadialNonoverlapForce;\n//# sourceMappingURL=radialNonoverlapForce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base = void 0;\nvar Base = /** @class */ (function () {\n    function Base() {\n        this.nodes = [];\n        this.edges = [];\n        this.combos = [];\n        this.positions = [];\n        this.destroyed = false;\n        this.onLayoutEnd = function () { };\n    }\n    Base.prototype.layout = function (data) {\n        this.init(data);\n        return this.execute(true);\n    };\n    Base.prototype.init = function (data) {\n        this.nodes = data.nodes || [];\n        this.edges = data.edges || [];\n        this.combos = data.combos || [];\n    };\n    Base.prototype.execute = function (reloadData) { };\n    Base.prototype.executeWithWorker = function () { };\n    Base.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    Base.prototype.updateCfg = function (cfg) {\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    };\n    Base.prototype.getType = function () {\n        return 'base';\n    };\n    Base.prototype.destroy = function () {\n        this.nodes = null;\n        this.edges = null;\n        this.combos = null;\n        this.positions = null;\n        this.destroyed = true;\n    };\n    Base.prototype.onTick = function () { };\n    return Base;\n}());\nexports.Base = Base;\n//# sourceMappingURL=base.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./math\"), exports);\n__exportStar(require(\"./object\"), exports);\n__exportStar(require(\"./function\"), exports);\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}